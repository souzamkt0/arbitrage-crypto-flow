const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
    console.error('‚ùå Vari√°veis de ambiente do Supabase n√£o encontradas!');
    process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function verificarTabelaProfiles() {
    console.log('üîç Verificando estado da tabela profiles...');
    
    try {
        // Tentar acessar a tabela profiles
        const { data, error } = await supabase
            .from('profiles')
            .select('*')
            .limit(1);
            
        if (error) {
            console.error('‚ùå Erro ao acessar tabela profiles:', error.message);
            console.log('\nüö® PROBLEMA IDENTIFICADO: Tabela profiles com problemas!');
            return false;
        }
        
        console.log('‚úÖ Tabela profiles acess√≠vel');
        console.log('Registros encontrados:', data?.length || 0);
        
        return true;
        
    } catch (err) {
        console.error('‚ùå Erro inesperado:', err.message);
        return false;
    }
}

async function verificarUsuarios() {
    console.log('\nüë• Verificando usu√°rios existentes...');
    
    try {
        // Verificar se h√° usu√°rios no auth
        const { data: { users }, error } = await supabase.auth.admin.listUsers();
        
        if (error) {
            console.log('‚ö†Ô∏è N√£o foi poss√≠vel listar usu√°rios (permiss√£o limitada)');
            return;
        }
        
        console.log(`üìä Total de usu√°rios: ${users?.length || 0}`);
        
    } catch (err) {
        console.log('‚ö†Ô∏è Verifica√ß√£o de usu√°rios limitada pela API');
    }
}

async function main() {
    console.log('üöÄ Diagn√≥stico completo do sistema\n');
    
    const tabelaOK = await verificarTabelaProfiles();
    await verificarUsuarios();
    
    console.log('\n' + '='.repeat(60));
    
    if (!tabelaOK) {
        console.log('üîß SOLU√á√ÉO OBRIGAT√ìRIA:');
        console.log('\n1. Abra o Supabase Dashboard');
        console.log('2. V√° para SQL Editor');
        console.log('3. Copie e execute TODO o conte√∫do do arquivo:');
        console.log('   üìÑ recreate-profiles-complete.sql');
        console.log('4. Aguarde a execu√ß√£o completa (sem erros)');
        console.log('5. Execute novamente: node test-registration.cjs');
        
        console.log('\n‚ö†Ô∏è IMPORTANTE:');
        console.log('- Execute TODO o script de uma vez');
        console.log('- N√£o execute linha por linha');
        console.log('- Aguarde a mensagem de sucesso');
        
    } else {
        console.log('‚úÖ Tabela profiles parece estar OK');
        console.log('üîÑ Teste o cadastro: node test-registration.cjs');
    }
    
    console.log('\n' + '='.repeat(60));
}

main().catch(console.error);