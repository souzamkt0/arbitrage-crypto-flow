// Teste completo de login do usu√°rio souzamkt0
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const SUPABASE_URL = process.env.VITE_SUPABASE_URL;
const SUPABASE_ANON_KEY = process.env.VITE_SUPABASE_ANON_KEY;

console.log('üîç Teste completo de login do usu√°rio souzamkt0...\n');

if (!SUPABASE_URL || !SUPABASE_ANON_KEY) {
  console.error('‚ùå Vari√°veis de ambiente n√£o encontradas!');
  process.exit(1);
}

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

async function testCompleteLogin() {
  try {
    console.log('1Ô∏è‚É£ Verificando perfil atual...');
    
    const { data: profile, error: profileError } = await supabase
      .from('profiles')
      .select('*')
      .eq('email', 'souzamkt0@gmail.com')
      .single();

    if (profileError) {
      console.log('‚ùå Erro ao buscar perfil:', profileError.message);
      return;
    }

    console.log('‚úÖ Perfil encontrado:');
    console.log('   Email:', profile.email);
    console.log('   Username:', profile.username);
    console.log('   Role:', profile.role);
    console.log('   Status:', profile.status);
    console.log('   Profile completed:', profile.profile_completed);

    // Simular a l√≥gica do useAuth.tsx
    const isAdmin = profile.email === 'souzamkt0@gmail.com' || profile.role === 'admin';
    
    console.log('\n2Ô∏è‚É£ Testando l√≥gica de admin...');
    console.log('   Email match:', profile.email === 'souzamkt0@gmail.com');
    console.log('   Role match:', profile.role === 'admin');
    console.log('   isAdmin result:', isAdmin);

    if (!isAdmin) {
      console.log('‚ùå PROBLEMA: Usu√°rio n√£o √© reconhecido como admin!');
      console.log('üîß Solu√ß√£o: Execute o script corrigir-role-souzamkt0.sql');
      return;
    }

    console.log('\n3Ô∏è‚É£ Verificando acesso a rotas protegidas...');
    
    // Simular verifica√ß√£o de rotas
    const protectedRoutes = ['/dashboard', '/admin', '/deposit', '/withdrawal'];
    const adminRoutes = ['/admin'];
    
    console.log('‚úÖ Rotas protegidas que o admin pode acessar:');
    protectedRoutes.forEach(route => {
      console.log(`   ${route}: ‚úÖ ACESSO PERMITIDO`);
    });
    
    console.log('‚úÖ Rotas de admin que o admin pode acessar:');
    adminRoutes.forEach(route => {
      console.log(`   ${route}: ‚úÖ ACESSO PERMITIDO`);
    });

    console.log('\n4Ô∏è‚É£ Verificando permiss√µes de dados...');
    
    // Testar se consegue ler dados de outros usu√°rios (como admin)
    const { data: allProfiles, error: allProfilesError } = await supabase
      .from('profiles')
      .select('email, role, status')
      .limit(5);

    if (allProfilesError) {
      console.log('‚ùå Erro ao ler perfis (poss√≠vel problema de RLS):', allProfilesError.message);
    } else {
      console.log('‚úÖ Conseguiu ler perfis de outros usu√°rios (admin)');
      console.log('   Total de perfis lidos:', allProfiles.length);
    }

    console.log('\n5Ô∏è‚É£ Verificando fun√ß√£o is_admin_user...');
    
    const { data: isAdminResult, error: isAdminError } = await supabase
      .rpc('is_admin_user', { user_email: 'souzamkt0@gmail.com' });

    if (isAdminError) {
      console.log('‚ùå Erro na fun√ß√£o is_admin_user:', isAdminError.message);
    } else {
      console.log('‚úÖ Fun√ß√£o is_admin_user retornou:', isAdminResult);
    }

    console.log('\n6Ô∏è‚É£ Resumo final:');
    
    const allGood = isAdmin && !allProfilesError && !isAdminError;
    
    if (allGood) {
      console.log('‚úÖ TUDO PERFEITO! O usu√°rio souzamkt0 deve conseguir:');
      console.log('   - Fazer login normalmente');
      console.log('   - Acessar o dashboard');
      console.log('   - Ver o menu "Admin" na navbar');
      console.log('   - Acessar /admin sem problemas');
      console.log('   - Ter todas as permiss√µes administrativas');
    } else {
      console.log('‚ùå AINDA H√Å PROBLEMAS:');
      if (!isAdmin) console.log('   - Usu√°rio n√£o √© reconhecido como admin');
      if (allProfilesError) console.log('   - Problemas com pol√≠ticas RLS');
      if (isAdminError) console.log('   - Fun√ß√£o is_admin_user n√£o funciona');
    }

  } catch (error) {
    console.error('‚ùå Erro geral:', error.message);
  }
}

// Executar o teste
testCompleteLogin();







