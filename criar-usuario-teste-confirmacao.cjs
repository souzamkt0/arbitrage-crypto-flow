#!/usr/bin/env node

// ========================================
// CRIAR USU√ÅRIO TESTE COM CONFIRMA√á√ÉO DE EMAIL
// Testa o SMTP Titan Email configurado
// ========================================

require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

// Configura√ß√£o do Supabase
const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
    console.error('‚ùå Erro: Vari√°veis de ambiente n√£o encontradas');
    console.log('Certifique-se de que VITE_SUPABASE_URL e VITE_SUPABASE_ANON_KEY est√£o no .env');
    process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function criarUsuarioTeste() {
    console.log('üöÄ Iniciando teste de cria√ß√£o de usu√°rio com confirma√ß√£o de email...');
    console.log('üìß SMTP Titan Email configurado: smtp.titan.email:587');
    console.log('üì§ Sender: noreply@alphabit.vu');
    console.log('');

    // Gerar email √∫nico para teste
    const timestamp = Date.now();
    const emailTeste = `teste.confirmacao.${timestamp}@alphabit.vu`;
    const senhaTeste = 'TesteConfirmacao123!';

    console.log(`üìù Criando usu√°rio teste: ${emailTeste}`);
    console.log(`üîê Senha: ${senhaTeste}`);
    console.log('');

    try {
        // Tentar criar usu√°rio
        const { data, error } = await supabase.auth.signUp({
            email: emailTeste,
            password: senhaTeste,
            options: {
                emailRedirectTo: `${supabaseUrl.replace('/rest/v1', '')}/auth/v1/verify`
            }
        });

        if (error) {
            console.error('‚ùå Erro ao criar usu√°rio:', error.message);
            
            // Verificar tipos espec√≠ficos de erro
            if (error.message.includes('Email rate limit exceeded')) {
                console.log('‚ö†Ô∏è  Rate limit atingido. Aguarde alguns minutos antes de tentar novamente.');
            } else if (error.message.includes('Invalid email')) {
                console.log('‚ö†Ô∏è  Email inv√°lido. Verifique o formato.');
            } else if (error.message.includes('Password')) {
                console.log('‚ö†Ô∏è  Problema com a senha. Verifique os requisitos.');
            } else if (error.message.includes('SMTP')) {
                console.log('‚ö†Ô∏è  Problema com configura√ß√£o SMTP.');
                console.log('üîß Verifique as configura√ß√µes no painel Supabase:');
                console.log('   - Authentication > Settings > SMTP Settings');
                console.log('   - Host: smtp.titan.email');
                console.log('   - Port: 587');
                console.log('   - User: suporte@alphabit.vu');
                console.log('   - Sender: noreply@alphabit.vu');
            }
            return;
        }

        console.log('‚úÖ Usu√°rio criado com sucesso!');
        console.log('üìä Dados do usu√°rio:');
        console.log(`   - ID: ${data.user?.id}`);
        console.log(`   - Email: ${data.user?.email}`);
        console.log(`   - Confirmado: ${data.user?.email_confirmed_at ? 'Sim' : 'N√£o'}`);
        console.log(`   - Criado em: ${data.user?.created_at}`);
        console.log('');

        if (data.user && !data.user.email_confirmed_at) {
            console.log('üìß Email de confirma√ß√£o enviado!');
            console.log('üîç Verifique:');
            console.log('   1. Caixa de entrada de suporte@alphabit.vu');
            console.log('   2. Pasta de spam/lixo eletr√¥nico');
            console.log('   3. Logs do Titan Email');
            console.log('');
            
            console.log('‚è±Ô∏è  Aguardando confirma√ß√£o...');
            console.log('üí° Para confirmar manualmente, execute no SQL Editor:');
            console.log(`   UPDATE auth.users SET email_confirmed_at = NOW() WHERE email = '${emailTeste}';`);
        } else {
            console.log('‚ö†Ô∏è  Usu√°rio j√° confirmado automaticamente.');
        }

        console.log('');
        console.log('üîç Para verificar o status, execute no SQL Editor:');
        console.log(`SELECT id, email, email_confirmed_at, created_at FROM auth.users WHERE email = '${emailTeste}';`);
        
    } catch (err) {
        console.error('‚ùå Erro inesperado:', err.message);
        console.log('üîß Verifique:');
        console.log('   1. Conex√£o com internet');
        console.log('   2. Configura√ß√µes do Supabase');
        console.log('   3. Vari√°veis de ambiente');
    }
}

async function verificarStatusSMTP() {
    console.log('üîç Verificando status do SMTP...');
    
    try {
        // Tentar fazer uma opera√ß√£o simples para testar conectividade
        const { data, error } = await supabase.auth.getSession();
        
        if (error) {
            console.log('‚ö†Ô∏è  Problema de conectividade:', error.message);
        } else {
            console.log('‚úÖ Conex√£o com Supabase OK');
        }
        
    } catch (err) {
        console.log('‚ùå Erro de conectividade:', err.message);
    }
    
    console.log('');
}

async function main() {
    console.log('========================================');
    console.log('üß™ TESTE DE USU√ÅRIO COM CONFIRMA√á√ÉO EMAIL');
    console.log('üìß Titan Email SMTP - AlphaBit');
    console.log('========================================');
    console.log('');
    
    await verificarStatusSMTP();
    await criarUsuarioTeste();
    
    console.log('');
    console.log('========================================');
    console.log('‚úÖ Teste finalizado!');
    console.log('üìù Pr√≥ximos passos:');
    console.log('   1. Verificar email de confirma√ß√£o');
    console.log('   2. Clicar no link de confirma√ß√£o');
    console.log('   3. Verificar status no SQL Editor');
    console.log('   4. Testar login com o usu√°rio criado');
    console.log('========================================');
}

// Executar o teste
main().catch(console.error);