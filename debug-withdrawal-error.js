// Script de Debug para Erro de Saque no Supabase
// Execute este script para diagnosticar o problema

console.log('üîç DEBUG: Erro ao salvar saque no Supabase');
console.log('==========================================');

// Poss√≠veis causas do erro:
console.log('\nüìã POSS√çVEIS CAUSAS DO ERRO:');
console.log('1. Docker n√£o est√° rodando (Supabase local)');
console.log('2. Tabela withdrawals n√£o existe ou estrutura incorreta');
console.log('3. Pol√≠ticas RLS bloqueando a inser√ß√£o');
console.log('4. Campos obrigat√≥rios n√£o preenchidos');
console.log('5. Tipos de dados incompat√≠veis');
console.log('6. Conex√£o com Supabase remoto com problemas');

// Solu√ß√µes recomendadas:
console.log('\nüîß SOLU√á√ïES RECOMENDADAS:');
console.log('\n1. VERIFICAR DOCKER E SUPABASE LOCAL:');
console.log('   - Instalar Docker Desktop');
console.log('   - Executar: npx supabase start');
console.log('   - Verificar se todas as migra√ß√µes foram aplicadas');

console.log('\n2. VERIFICAR ESTRUTURA DA TABELA:');
console.log('   - Confirmar se tabela withdrawals existe');
console.log('   - Verificar se todas as colunas est√£o presentes');
console.log('   - Confirmar tipos de dados corretos');

console.log('\n3. VERIFICAR POL√çTICAS RLS:');
console.log('   - Confirmar se usu√°rio tem permiss√£o para inserir');
console.log('   - Verificar se auth.uid() est√° funcionando');
console.log('   - Testar com usu√°rio administrador');

console.log('\n4. VERIFICAR DADOS DE ENTRADA:');
console.log('   - Confirmar se user.id n√£o √© null');
console.log('   - Verificar se valores num√©ricos s√£o v√°lidos');
console.log('   - Confirmar se strings n√£o excedem limites');

console.log('\n5. VERIFICAR CONEX√ÉO SUPABASE:');
console.log('   - Confirmar URL e chave anon no .env');
console.log('   - Testar conex√£o com Supabase remoto');
console.log('   - Verificar se projeto est√° ativo');

// Comandos para debug:
console.log('\n‚ö° COMANDOS PARA DEBUG:');
console.log('\n# Verificar status do Docker:');
console.log('docker --version');
console.log('docker ps');

console.log('\n# Iniciar Supabase local:');
console.log('npx supabase start');
console.log('npx supabase status');

console.log('\n# Verificar migra√ß√µes:');
console.log('npx supabase db reset');
console.log('npx supabase migration list');

console.log('\n# Testar conex√£o:');
console.log('npx supabase db shell');
console.log('SELECT * FROM withdrawals LIMIT 1;');

// Exemplo de dados corretos:
console.log('\nüìä EXEMPLO DE DADOS CORRETOS:');
const exemploSaque = {
  user_id: 'uuid-do-usuario',
  amount_usd: 50.00,
  amount_brl: 50.00,
  type: 'pix',
  status: 'pending',
  holder_name: 'Nome do Usu√°rio',
  cpf: '12345678901',
  pix_key_type: 'cpf',
  pix_key: '123.456.789-01',
  fee: 1.00,
  net_amount: 49.00,
  exchange_rate: 1
};
console.log(JSON.stringify(exemploSaque, null, 2));

console.log('\nüéØ PR√ìXIMOS PASSOS:');
console.log('1. Abrir console do navegador (F12)');
console.log('2. Tentar fazer um saque');
console.log('3. Verificar logs detalhados no console');
console.log('4. Copiar mensagem de erro completa');
console.log('5. Aplicar solu√ß√£o espec√≠fica baseada no erro');

console.log('\n‚úÖ SISTEMA ATUALIZADO COM:');
console.log('- Logs detalhados de erro');
console.log('- Corre√ß√£o do holder_name');
console.log('- Corre√ß√£o da refer√™ncia user_id na tabela profiles');
console.log('- Valida√ß√µes aprimoradas');

console.log('\nüîó Aplica√ß√£o: http://localhost:8080/');
console.log('==========================================');